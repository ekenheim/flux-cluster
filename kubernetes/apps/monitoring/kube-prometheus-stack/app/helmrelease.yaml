---
# yaml-language-server: $schema=https://kubernetes-schemas.devbu.io/helmrelease_v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: kube-prometheus-stack
  namespace: monitoring
spec:
  interval: 15m
  chart:
    spec:
      chart: kube-prometheus-stack
      version: 43.2.1
      sourceRef:
        kind: HelmRepository
        name: prometheus-community
        namespace: flux-system
  maxHistory: 3
  install:
    createNamespace: true
    crds: CreateReplace
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    crds: CreateReplace
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    alertmanager:
      config:
        global:
          resolve_timeout: 5m
        receivers:
          - name: "null"
        route:
          group_by: ["alertname", "job"]
          group_wait: 30s
          group_interval: 5m
          repeat_interval: 6h
          receiver: "pushover"
          routes:
            - receiver: "null"
              matchers:
                - alertname =~ "InfoInhibitor|Watchdog"
            - receiver: "pushover"
              matchers:
                - severity = "critical"
              continue: true
        inhibit_rules:
          - source_matchers:
              - severity = "critical"
            target_matchers:
              - severity = "warning"
            equal: ["alertname", "namespace"]
      ingress:
        enabled: true
        pathType: Prefix
        ingressClassName: nginx
        annotations:
          hajimari.io/appName: "Alert Manager"
          hajimari.io/icon: mdi:alert-decagram-outline
        hosts:
          - &host alert-manager.ekenhome.se
        tls:
          - hosts:
              - *host
      alertmanagerSpec:
        replicas: 3
        podAntiAffinity: hard
        storage:
          volumeClaimTemplate:
            spec:
              storageClassName: longhorn
              resources:
                requests:
                  storage: 1Gi
    kube-state-metrics:
      metricLabelsAllowlist:
        - "persistentvolumeclaims=[*]"
      prometheus:
        monitor:
          enabled: true
          relabelings:
            - action: replace
              regex: (.*)
              replacement: $1
              sourceLabels:
                - __meta_kubernetes_pod_node_name
              targetLabel: kubernetes_node
    grafana:
      enabled: false
      forceDeployDashboards: true
      sidecar:
        dashboards:
          multicluster:
            etcd:
              enabled: true
    kubelet:
      enabled: true
      serviceMonitor:
        metricRelabelings:
          - action: replace
            sourceLabels:
              - node
            targetLabel: instance
    kubeApiServer:
      enabled: true
    kubeControllerManager:
      enabled: true
      endpoints:
        - 192.168.50.30
        - 192.168.50.31
        - 192.168.50.35
    kubeScheduler:
      enabled: true
      endpoints:
        - 192.168.50.30
        - 192.168.50.31
        - 192.168.50.35
    kubeProxy:
      enabled: true
      endpoints:
        - 192.168.50.30
        - 192.168.50.31
        - 192.168.50.35
    kubeEtcd:
      enabled: true
      endpoints:
        - 192.168.50.30
        - 192.168.50.31
        - 192.168.50.35
      service:
        enabled: true
        port: 2381
        targetPort: 2381
    prometheus:
      ingress:
        enabled: true
        ingressClassName: nginx
        annotations:
          hajimari.io/appName: "Prometheus"
          hajimari.io/icon: simple-icons:prometheus
        pathType: Prefix
        hosts:
          - &host prometheus.ekenhome.se
        tls:
          - hosts:
              - *host
      thanosService:
        enabled: true
      thanosServiceMonitor:
        enabled: true
      thanosIngress:
        enabled: true
        pathType: Prefix
        ingressClassName: nginx
        annotations:
          nginx.ingress.kubernetes.io/ssl-redirect: "true"
          nginx.ingress.kubernetes.io/backend-protocol: "GRPC"
          hajimari.io/enable: "false"
        hosts:
          - &host thanos-sidecar.ekenhome.se
        tls:
          - hosts:
              - *host
      prometheusSpec:
        replicas: 3
        replicaExternalLabelName: __replica__
        externalLabels:
          cluster: home-ops
        thanos:
          image: quay.io/thanos/thanos:v0.29.0
          # renovate: datasource=docker depName=quay.io/thanos/thanos
          version: "v0.29.0"
        podAntiAffinity: hard
        ruleSelectorNilUsesHelmValues: false
        serviceMonitorSelectorNilUsesHelmValues: false
        podMonitorSelectorNilUsesHelmValues: false
        probeSelectorNilUsesHelmValues: false
        retention: 14d
        retentionSize: 45GB
        enableAdminAPI: true
        walCompression: true
        storageSpec:
          volumeClaimTemplate:
            spec:
              storageClassName: longhorn
              resources:
                requests:
                  storage: 50Gi
        resources:
          requests:
            cpu: 10m
            memory: 2000Mi
          limits:
            memory: 8000Mi
        additionalScrapeConfigs:
          - job_name: haproxy
            scrape_interval: 1m
            scrape_timeout: 10s
            honor_timestamps: true
            static_configs:
              - targets: ["opnsense.turbo.ac:8404"]
          - job_name: coredns
            scrape_interval: 1m
            scrape_timeout: 10s
            honor_timestamps: true
            static_configs:
              - targets: ["opnsense.turbo.ac:9153"]
          - job_name: frr-exporter
            scrape_interval: 1m
            scrape_timeout: 10s
            honor_timestamps: true
            static_configs:
              - targets: ["opnsense.turbo.ac:9342"]
          - job_name: node-exporter
            scrape_interval: 1m
            scrape_timeout: 10s
            honor_timestamps: true
            static_configs:
              - targets:
                  - expanse.turbo.ac:9100
                  - opnsense.turbo.ac:9100
                  - pikvm.turbo.ac:9100
          - job_name: smartctl-exporter
            scrape_interval: 1m
            scrape_timeout: 10s
            honor_timestamps: true
            static_configs:
              - targets: ["expanse.turbo.ac:9633"]
          - job_name: pikvm
            scrape_interval: 1m
            scrape_timeout: 10s
            metrics_path: /api/export/prometheus/metrics
            basic_auth:
              username: admin
              password: 1NtERnALOnLYuS3
            honor_timestamps: true
            static_configs:
              - targets: ["pikvm.turbo.ac"]
          - job_name: nexus
            scrape_interval: 1m
            scrape_timeout: 10s
            metrics_path: /service/metrics/prometheus
            basic_auth:
              username: admin
              password: 1NtERnALOnLYuS3
            static_configs:
              - targets: ["nexus.turbo.ac"]
